{"version":3,"sources":["components/TodoItem.js","components/TodoList.js","components/Header.js","App.js","index.js"],"names":["ButtonStyled","styled","Button","p","isCompleted","css","TodoItem","key","todoItem","HandleCheckChild","HandleRemoveClick","HandleRemoveChecked","className","size","onChange","id","isChecked","isComplete","shouldFitContainer","iconAfter","onClick","cursor","name","TodoList","map","Header","TODO_APP_STORAGE_KEY","App","useState","setTodoList","TextInput","setTextInput","Check","setCheck","useEffect","storagedTodoList","localStorage","getItem","JSON","parse","setItem","stringify","HandleTextInput","useCallback","e","target","value","HandleButtonClicked","v1","HandleOnKeyUp","keyCode","HandleCheckAll","console","log","checked","prevState","splice","indexOf","primary","placeholder","onKeyUp","elemAfterInput","isDisabled","appearance","type","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sSAQMA,EAAeC,YAAOC,IAAPD,CAAH,oPAMd,SAACE,GAAD,OACAA,EAAEC,aAAeC,YAAjB,6FAqCWC,MAlBf,YAA4F,EAAzEC,IAA0E,IAAtEC,EAAqE,EAArEA,SAAUC,EAA2D,EAA3DA,iBAAkBC,EAAyC,EAAzCA,kBAAmBC,EAAsB,EAAtBA,oBAGpE,OAAS,sBAAKC,UAAU,WAAf,UACL,cAAC,IAAD,CAAUC,KAAK,QAASC,SAAU,kBAAIL,EAAiBD,EAASO,KAAKC,UAAWR,EAASQ,YACzF,cAAChB,EAAD,CAAcc,SAAU,kBAAIH,KAAuBP,YAAaI,EAASS,WAAYC,oBAAkB,EAACC,UACxG,sBAAMP,UAAU,cACVQ,QAAS,kBAAIV,EAAkBF,IADrC,SAEC,cAAC,IAAD,CACDa,OAAO,UACPR,KAAK,YALL,SAQGL,EAASc,WC9BHC,MAbf,YAAyF,IAAtEA,EAAqE,EAArEA,SAAUd,EAA2D,EAA3DA,iBAAkBC,EAAyC,EAAzCA,kBAAmBC,EAAsB,EAAtBA,oBAChE,OAAQ,8BAEAY,EAASC,KAAI,SAAAhB,GAAQ,OACrB,cAAC,EAAD,CACAC,iBAAkBA,EAClBC,kBAAmBA,EACnBC,oBAAqBA,EACrBH,SAAUA,UCALiB,MAVf,WAGE,OAAO,qBAAKb,UAAU,SAAf,SACH,qBAAKA,UAAU,eAAf,SACE,qDCMFc,EAAuB,WAuIdC,MArIf,WACE,MAAgCC,mBAAS,IAAzC,mBAAOL,EAAP,KAAiBM,EAAjB,KACA,EAAkCD,mBAAS,IAA3C,mBAAOE,EAAP,KAAkBC,EAAlB,KACA,EAAuBH,oBAAS,GAAhC,mBAAOI,EAAP,KAAaC,EAAb,KAEAC,qBAAU,WACR,IAAMC,EAAmBC,aAAaC,QAAQX,GAC3CS,GACDN,EAAYS,KAAKC,MAAMJ,MAEzB,IAEFD,qBAAU,WACRE,aAAaI,QAAQd,EAAqBY,KAAKG,UAAUlB,MACzD,CAACA,IAGH,IAAMmB,EAAkBC,uBAAY,SAACC,GACnCb,EAAaa,EAAEC,OAAOC,SACrB,IAEGC,EAAsBJ,uBAAY,SAACC,GACvCf,EAAY,CACV,CAAEd,GAAIiC,cAAM1B,KAAMQ,EAAWb,YAAY,EAAOD,WAAW,IADlD,mBAENO,KAELQ,EAAa,MAEZ,CAACD,EAAWP,IAGT0B,EAAgBN,uBAAY,SAACC,GACf,KAAdA,EAAEM,UACJrB,EAAY,CACV,CAAEd,GAAIiC,cAAM1B,KAAMQ,EAAWb,YAAY,EAAOD,WAAW,IADlD,mBAENO,KAELQ,EAAa,OAGd,CAACD,EAAWP,IAET4B,EAAiBR,uBAAY,SAACC,GAClCQ,QAAQC,IAAI,OACZ,IAAIC,EAAUV,EAAEC,OAAOS,QACvBzB,GAAY,SAAC0B,GAAD,OACVA,EAAU/B,KAAI,SAAAhB,GAAa,OAAa,IAAV8C,GAC5BrB,GAAS,GACF,YAAC,eAAMzB,GAAd,IAAwBQ,UAAWsC,EAASrC,YAAW,MACtC,IAAVqC,GACPrB,GAAS,GACF,YAAC,eAAMzB,GAAd,IAAwBQ,UAAWsC,EAASrC,YAAW,UAFnD,UASP,IAEGR,EAAmBkC,uBAAY,SAAC5B,GACpCqC,QAAQC,IAAI,OACZxB,GAAY,SAAC0B,GAAD,OACVA,EAAU/B,KAAI,SAAAhB,GACZ,OAA2B,IAAvBA,EAASQ,UACHR,EAASO,KAAOA,EAAhB,2BAA0BP,GAA1B,IAAoCQ,WAAW,EAAMC,YAAY,IAAST,EAE1EA,EAASO,KAAOA,EAAhB,2BAA0BP,GAA1B,IAAoCQ,WAAW,EAAOC,YAAY,IAAUT,UAKzF,IAEGE,EAAoBiC,uBAAY,SAACrC,GACrC8C,QAAQC,IAAI,OACT/C,EAASU,WACVO,EAASiC,OAAOjC,EAASkC,QAAQnD,GAAU,GAE5CuB,EAAY,YAAIN,MAGlB,CAACA,IAGIZ,EAAsBgC,uBAAY,WACtCS,QAAQC,IAAI,SACZ9B,EAASC,KAAI,SAAChB,IACa,IAAtBA,EAASS,aACVM,EAASiC,OAAOjC,EAASkC,QAAQjD,GAAU,GAC3CG,QAGJkB,EAAY,YAAIN,IAChBU,GAAS,KAET,CAACV,IAEH,OACE,sBAAKX,UAAU,gBAAf,UACE,cAAC,EAAD,IACA,sBAAKA,UAAU,kBAAf,UACE,cAAC,IAAD,CAAUI,UAAWgB,EAAOlB,SAAUqC,EAAgBtC,KAAK,QAAQS,KAAK,WACxE,sBAAMV,UAAU,cACZQ,QAAS,kBAAIT,KADjB,SAED,cAAC,IAAD,CACD+C,QAAQ,UACRrC,OAAO,UACPR,KAAK,YAGH,cAAC,IAAD,CAAW8C,YAAY,iBACrBb,MAAOhB,EACPhB,SAAU4B,EACVkB,QAASX,EACTY,eACE,cAAC,IAAD,CAAQzC,QAAS2B,EACfe,YAAahC,EACbiC,WAAW,UACXC,KAAK,SAHP,iCASN,cAAC,EAAD,CAAWzC,SAAUA,EACnBd,iBAAkBA,EAClBC,kBAAmBA,EACnBC,oBAAqBA,QCzI7BsD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b441163a.chunk.js","sourcesContent":["\r\nimport React from 'react';\r\n\r\nimport Button from '@atlaskit/button';\r\nimport styled,{ css } from 'styled-components';\r\nimport Checkbox  from '@atlaskit/checkbox';\r\nimport RemoveIcon from '@atlaskit/icon/glyph/trash';\r\n\r\nconst ButtonStyled = styled(Button)`\r\n  margin-top: 5px;\r\n  text-align:left;\r\n\r\n  &,\r\n  &:hover{\r\n  ${(p)=>\r\n    p.isCompleted && css`\r\n    text-decoration: line-through;\r\n    color:#555555;    \r\n  `}\r\n  }\r\n  &:hover{\r\n    .remove-icon{\r\n      display: inline-block;\r\n    }\r\n  }\r\n  .remove-icon{\r\n    display:none;\r\n    border-radius:3px;\r\n  }\r\n\r\n\r\n\r\n`\r\n \r\nfunction TodoItem({key,todoItem, HandleCheckChild, HandleRemoveClick, HandleRemoveChecked}) {\r\n\r\n  \r\n  return ( <div className=\"todoItem\">\r\n      <Checkbox size=\"large\"  onChange={()=>HandleCheckChild(todoItem.id)} isChecked={todoItem.isChecked}  />\r\n      <ButtonStyled onChange={()=>HandleRemoveChecked()} isCompleted={todoItem.isComplete} shouldFitContainer iconAfter={\r\n      <span className=\"remove-icon\" \r\n            onClick={()=>HandleRemoveClick(todoItem)}>\r\n       <RemoveIcon \r\n      cursor=\"pointer\" \r\n      size=\"large\" \r\n      />\r\n      </span>} >\r\n        {todoItem.name}</ButtonStyled>\r\n     </div>\r\n  );\r\n}\r\n\r\nexport default TodoItem;","import React from 'react';\r\nimport TodoItem from './TodoItem.js'\r\n\r\n\r\nfunction TodoList({TodoList, HandleCheckChild, HandleRemoveClick, HandleRemoveChecked}) {\r\n  return (<div>\r\n      {\r\n          TodoList.map(todoItem=>\r\n          <TodoItem \r\n          HandleCheckChild={HandleCheckChild}\r\n          HandleRemoveClick={HandleRemoveClick}\r\n          HandleRemoveChecked={HandleRemoveChecked}\r\n          todoItem={todoItem}/>)\r\n      }\r\n  </div>);\r\n}\r\n\r\nexport default TodoList;","import React from 'react';\r\n\r\nfunction Header() {\r\n    \r\n  \r\n  return <div className=\"Header\">\r\n      <div className=\"header-title\">\r\n        <p> Overdose List </p>\r\n      </div>\r\n  </div>;\r\n}\r\n\r\nexport default Header;","\nimport './App.css';\nimport { useCallback, useEffect, useState } from 'react';\nimport Textfield from '@atlaskit/textfield';\nimport Button from '@atlaskit/button';\nimport { v1} from \"uuid\";\nimport React from 'react';\nimport TodoLists from './components/TodoList';\nimport Header from './components/Header';\nimport Checkbox from '@atlaskit/checkbox';\nimport RemoveIcon from '@atlaskit/icon/glyph/trash';\n\n\nconst TODO_APP_STORAGE_KEY = 'TODO_APP'\n\nfunction App() {\n  const [TodoList, setTodoList] = useState([]);\n  const [TextInput, setTextInput] = useState(\"\");\n  const [Check,setCheck]=useState(false);\n\n  useEffect(()=>{\n    const storagedTodoList = localStorage.getItem(TODO_APP_STORAGE_KEY);\n    if(storagedTodoList){\n      setTodoList(JSON.parse(storagedTodoList));\n    }\n  },[])\n\n  useEffect(()=>{\n    localStorage.setItem(TODO_APP_STORAGE_KEY,JSON.stringify(TodoList))\n  },[TodoList])\n\n\n  const HandleTextInput = useCallback((e) => {\n    setTextInput(e.target.value);\n  }, []);\n\n  const HandleButtonClicked = useCallback((e) => {\n    setTodoList([\n      { id: v1(), name: TextInput, isComplete: false, isChecked: false },\n      ...TodoList,\n    ]);\n    setTextInput(\"\");\n\n  }, [TextInput, TodoList]);\n\n\n  const HandleOnKeyUp = useCallback((e) => {\n    if (e.keyCode === 13) {\n      setTodoList([\n        { id: v1(), name: TextInput, isComplete: false, isChecked: false },\n        ...TodoList,\n      ]);\n      setTextInput(\"\");\n    }\n\n  }, [TextInput, TodoList]);\n\n  const HandleCheckAll = useCallback((e) => {\n    console.log('log');\n    let checked = e.target.checked;\n    setTodoList((prevState) =>\n      prevState.map(todoItem => {if(checked===true){\n        setCheck(true); \n        return ( { ...todoItem, isChecked: checked, isComplete:true })\n      }else if(checked===false){\n        setCheck(false); \n        return ( { ...todoItem, isChecked: checked, isComplete:false } )\n      }\n          \n      }\n      )\n    );\n    \n  }, []);\n\n  const HandleCheckChild = useCallback((id) => {\n    console.log('log');\n    setTodoList((prevState) =>\n      prevState.map(todoItem => {\n        if (todoItem.isChecked === false) {\n          return (todoItem.id === id ? { ...todoItem, isChecked: true, isComplete: true } : todoItem)\n        } else {\n          return (todoItem.id === id ? { ...todoItem, isChecked: false, isComplete: false } : todoItem)\n        }\n      }\n      )\n    );\n  }, []);\n\n  const HandleRemoveClick = useCallback((TodoItem)=>{\n    console.log('log');\n    if(TodoItem.isChecked){\n      TodoList.splice(TodoList.indexOf(TodoItem),1);\n     } \n     setTodoList([...TodoList]);\n    }\n    \n  ,[TodoList])\n\n\n  const HandleRemoveChecked = useCallback(()=>{\n    console.log('check');\n    TodoList.map((todoItem)=>{\n      if(todoItem.isComplete===true){\n        TodoList.splice(TodoList.indexOf(todoItem),1);\n        HandleRemoveChecked();\n      }\n    })\n    setTodoList([...TodoList]);\n    setCheck(false);  \n    // setTodoList([...TodoList]);\n  },[TodoList])\n\n  return (\n    <div className=\"App scrollbar\">\n      <Header />\n      <div className=\"input-container\">\n        <Checkbox isChecked={Check} onChange={HandleCheckAll} size=\"large\" name=\"parent\" />\n        <span className=\"remove-icon\" \n            onClick={()=>HandleRemoveChecked()}>\n       <RemoveIcon \n      primary='#4fff4f' \n      cursor=\"pointer\" \n      size=\"large\" \n      />\n      </span>\n        <Textfield placeholder=\"Nhập Todo\"\n          value={TextInput}\n          onChange={HandleTextInput}\n          onKeyUp={HandleOnKeyUp}\n          elemAfterInput={\n            <Button onClick={HandleButtonClicked}\n              isDisabled={!TextInput}\n              appearance='primary'\n              type='submit'>\n              Thêm vào\n            </Button>}\n        />\n      </div>\n\n      <TodoLists TodoList={TodoList}\n        HandleCheckChild={HandleCheckChild}\n        HandleRemoveClick={HandleRemoveClick}\n        HandleRemoveChecked={HandleRemoveChecked} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}